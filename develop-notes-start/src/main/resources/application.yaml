# 应用服务 WEB 访问端口
server:
  port: 8080

spring:
  profiles:
    active: dev
  application:
    name: develop-notes
  jackson:
    time-zone: GMT+8
  main:
    allow-bean-definition-overriding: true
  # H2
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  # 启用H2控制台
  h2:
    console:
      enabled: true
      path: /h2-console


  # MySQL
#  datasource:
#    # druid 连接池配置 https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
#    type: com.alibaba.druid.pool.DruidDataSource
#    driverClassName: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://192.168.3.110:3306/vip?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
#    username: opsa
#    password: opsa1234
#    druid:
#      initial-size: 10
#      min-idle: 10
#      max-active: 50
#      max-wait: 60000
#      # druid 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#      time-between-eviction-runs-millis: 60000
#      # 配置一个连接在池中最小生存的时间，单位是毫秒
#      min-evictable-idle-time-millis: 300000
#      # druid 验证数据库连接的有效性
#      validation-query: SELECT 1 FROM DUAL
#      test-while-idle: false
#      test-on-return: false
#      test-on-borrow: false
#      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#      # druid 打开PSCache，并且指定每个连接上PSCache的大小
#      pool-prepared-statements: true
#      max-open-prepared-statements: 20
#      max-pool-prepared-statement-per-connection-size: 20
#      # druid 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#      filters: stat,wall,slf4j
#      # aop-patterns: "com.springboot.template.dao.*"
#      # 参数可以在 com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties 中找到
#      filter:
#        wall:
#          # 开启防火墙
#          enabled: true
#          config:
#            # 允许执行批处理
#            multi-statement-allow: true
#            # 不允许执行删除
#            delete-allow: false
#        # druid 状态监控
#        stat:
#          enabled: true
#          db-type: mysql
#          log-slow-sql: true
#          slow-sql-millis: 2000 # 慢SQL记录
#          merge-sql: true # mergeSql功能
#        # 日志监控，使用slf4j 进行日志输出
#        slf4j:
#          enabled: true
#          statement-log-error-enabled: true
#          statement-create-after-log-enabled: false
#          statement-close-after-log-enabled: false
#          result-set-open-after-log-enabled: false
#          result-set-close-after-log-enabled: false
#      # druid 监控过滤器
#      web-stat-filter:
#        enabled: true
#        url-pattern: /*
#        exclusions: '*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*'
#        # 开启session统计功能
#        session-stat-enable: true
#        # session的最大个数,默认100
#        session-stat-max-count: 1000
#      # druid 监控页面
#      stat-view-servlet:
#        enabled: true
#        url-pattern: /druid/*
#        login-username: admin
#        login-password: admin
#        reset-enable: false
#        # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问
#        # allow: 127.0.0.1
#        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝
#        # deny:

#  redis:
#    database: 0
#    host: 192.168.3.134
#    password:
#    port: 6379
#    ping-connection-interval: 1000

#xxl:
#  job:
#    admin:
#      ### 调度中心部署根地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
#      addresses: http://118.31.121.93:8080/xxl-job-admin
#    ### 执行器通讯TOKEN [选填]：非空时启用；
#    accessToken: default_token
#  ### 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
#  executor:
#    appname: xxl-job-executor-sample
#    ### 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。
#    address:
#    ### 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
#    ip:
#    ### 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
#    port: 9999
#  ### 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
#  logpath: /data/applogs/xxl-job/jobhandler
#  ### 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；
#  logretentiondays: 30

#nacos:
#  discovery:
#    server-addr: 192.168.3.155:8848
#    auto-register: true
#    register:
#      service-name:
#      enabled: true
#      group-name: DEFAULT_GROUP
#      healthy: true
#  config:
#    server-addr: 192.168.3.155:8848
#    file-extension: yaml #properties
#    namespace:

## 配置 rocketmq
#rocketmq:
#  # 多个NameServer，host:port;host:port，RocketMQProperties
#  name-server: 192.168.3.182:9876
#  #生产者
#  producer:
#    #生产者组名，规定在一个应用里面必须唯一
#    group: springboot_producer_group
#    #消息发送的超时时间 默认3000ms
#    send-message-timeout: 3000
#    #消息达到4096字节的时候，消息就会被压缩。默认 4096
#    compress-message-body-threshold: 4096
#    #最大的消息限制，默认为128K
#    max-message-size: 4194304
#    #同步消息发送失败重试次数
#    retry-times-when-send-failed: 3
#    #在内部发送失败时是否重试其他代理，这个参数在有多个broker时才生效,默认false
#    retry-next-server: true
#    #异步消息发送失败重试的次数
#    retry-times-when-send-async-failed: 3
#    # access-key
#    #accessKey: xxx
#    # secret-key
#    #secretKey: xxx
#    # 是否启用消息跟踪，默认false
#    enableMsgTrace: false
#    # 消息跟踪主题的名称值。如果不进行配置，可以使用默认的跟踪主题名称
#    customizedTraceTopic: RMQ_SYS_TRACE_TOPIC
#  #消费者
#  consumer:
#    # 配置指定group是否启动监听器 group1.topic1 = false
#    #    listeners:
#    # key：group名称
#    #      rocketmq_source_code_group:
#    # value：{key: topic名称: value: true/false}
#    #      rocketmq_source_code: true
#    # 指定消费组
#    group: springboot_consumer_group
#    # 指定topic，启动时就会注册
#    #topic: springboot_consumer_xxx
#    # 一次拉取消息最大值，注意是拉取消息的最大值而非消费最大值
#    pull-batch-size: 10
#    # 其他配置参考属性类


logging:
  level:
    root: INFO # 设置全局日志级别为INFO
    org.springframework.web: INFO # 设置特定包的日志级别为DEBUG
    org.springframework.boot.autoconfigure: INFO
    io.netty: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n" # 自定义控制台日志格式
  file: # 文件日志配置
    path: ./logs # 日志文件路径
    name: application.log # 日志文件名

mybatis-plus:
  global-config:
    db-config:
      insert-strategy: not_empty
      update-strategy: not_empty
      id-type: AUTO
    banner: false
  mapper-locations: classpath:mapper/**/*Mapper*.xml
  type-aliases-package: com.github.sailboat.notes.entity.*
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl


